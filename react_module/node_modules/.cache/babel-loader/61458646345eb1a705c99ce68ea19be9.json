{"ast":null,"code":"const {\n  Interface,\n  bytecode\n} = require('./compile');\n\nimport web3 from './web3';\n\nconst deploy = async () => {\n  const accounts = await web3.eth.getAccounts();\n  console.log('Attempting to deploy from account', accounts[0]);\n  const result = await new web3.eth.Contract(JSON.parse(Interface)).deploy({\n    data: bytecode,\n    arguments: [499, 100]\n  }) //the arguments should be sent to  the contract constructor\n  .send({\n    gas: '1000000',\n    from: accounts[0]\n  });\n  console.log(Interface);\n  console.log('Contract deployed to', result.options.address);\n  return new web3.eth.Contract(abi, address);\n};\n\nexport default deploy();","map":{"version":3,"sources":["/home/shaheen/Desktop/pay module code/pay module/pay-module-react/src/deploy.js"],"names":["Interface","bytecode","require","web3","deploy","accounts","eth","getAccounts","console","log","result","Contract","JSON","parse","data","arguments","send","gas","from","options","address","abi"],"mappings":"AACA,MAAM;AAACA,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,IAAyBC,OAAO,CAAC,WAAD,CAAtC;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,MAAM,GAAG,YAAY;AACvB,QAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDJ,QAAQ,CAAC,CAAD,CAAzD;AAEA,QAAMK,MAAM,GAAG,MAAM,IAAIP,IAAI,CAACG,GAAL,CAASK,QAAb,CAAsBC,IAAI,CAACC,KAAL,CAAWb,SAAX,CAAtB,EAChBI,MADgB,CACT;AAACU,IAAAA,IAAI,EAAEb,QAAP;AAAiBc,IAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,GAAN;AAA5B,GADS,EACmC;AADnC,GAEhBC,IAFgB,CAEX;AAACC,IAAAA,GAAG,EAAE,SAAN;AAAiBC,IAAAA,IAAI,EAAEb,QAAQ,CAAC,CAAD;AAA/B,GAFW,CAArB;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCC,MAAM,CAACS,OAAP,CAAeC,OAAnD;AAEA,SAAO,IAAIjB,IAAI,CAACG,GAAL,CAASK,QAAb,CAAsBU,GAAtB,EAA2BD,OAA3B,CAAP;AACH,CAZD;;AAcA,eAAehB,MAAM,EAArB","sourcesContent":["\nconst {Interface, bytecode } = require('./compile');\nimport web3 from './web3';\n\nconst deploy = async () => {\n    const accounts = await web3.eth.getAccounts();\n    console.log('Attempting to deploy from account', accounts[0]);\n\n    const result = await new web3.eth.Contract(JSON.parse(Interface))\n        .deploy({data: bytecode, arguments: [499, 100]})    //the arguments should be sent to  the contract constructor\n        .send({gas: '1000000', from: accounts[0]});\n\n    console.log(Interface);\n    console.log('Contract deployed to', result.options.address);\n\n    return new web3.eth.Contract(abi, address);\n};\n\nexport default deploy()"]},"metadata":{},"sourceType":"module"}